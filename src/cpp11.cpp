// Generated by cpp11: do not edit by hand
// clang-format off

#include "aznyan_types.h"
#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// blur.cpp
cpp11::raws azny_medianblur(cpp11::raws png, int ksize);
extern "C" SEXP _aznyan_azny_medianblur(SEXP png, SEXP ksize) {
  BEGIN_CPP11
    return cpp11::as_sexp(azny_medianblur(cpp11::as_cpp<cpp11::decay_t<cpp11::raws>>(png), cpp11::as_cpp<cpp11::decay_t<int>>(ksize)));
  END_CPP11
}
// blur.cpp
cpp11::raws azny_boxblur(cpp11::raws png, int box_w, int box_h, bool normalize, int border);
extern "C" SEXP _aznyan_azny_boxblur(SEXP png, SEXP box_w, SEXP box_h, SEXP normalize, SEXP border) {
  BEGIN_CPP11
    return cpp11::as_sexp(azny_boxblur(cpp11::as_cpp<cpp11::decay_t<cpp11::raws>>(png), cpp11::as_cpp<cpp11::decay_t<int>>(box_w), cpp11::as_cpp<cpp11::decay_t<int>>(box_h), cpp11::as_cpp<cpp11::decay_t<bool>>(normalize), cpp11::as_cpp<cpp11::decay_t<int>>(border)));
  END_CPP11
}
// blur.cpp
cpp11::raws azny_gaussianblur(cpp11::raws png, int box_w, int box_h, double sigma_x, double sigma_y, int border);
extern "C" SEXP _aznyan_azny_gaussianblur(SEXP png, SEXP box_w, SEXP box_h, SEXP sigma_x, SEXP sigma_y, SEXP border) {
  BEGIN_CPP11
    return cpp11::as_sexp(azny_gaussianblur(cpp11::as_cpp<cpp11::decay_t<cpp11::raws>>(png), cpp11::as_cpp<cpp11::decay_t<int>>(box_w), cpp11::as_cpp<cpp11::decay_t<int>>(box_h), cpp11::as_cpp<cpp11::decay_t<double>>(sigma_x), cpp11::as_cpp<cpp11::decay_t<double>>(sigma_y), cpp11::as_cpp<cpp11::decay_t<int>>(border)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_aznyan_azny_boxblur",      (DL_FUNC) &_aznyan_azny_boxblur,      5},
    {"_aznyan_azny_gaussianblur", (DL_FUNC) &_aznyan_azny_gaussianblur, 6},
    {"_aznyan_azny_medianblur",   (DL_FUNC) &_aznyan_azny_medianblur,   2},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_aznyan(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
