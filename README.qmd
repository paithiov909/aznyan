---
title: aznyan
format: gfm
fig-width: 2.66
fig-height: 2.66
knitr:
  opts_chunk:
    dev: "ragg_png"
    collapse: true
    comment: "#>"
    fig.path: "man/figures/README-"
    out.width: "30%"
---

<!-- README.md is generated from README.qmd. Please edit that file -->

<!-- badges: start -->
[![R-CMD-check](https://github.com/paithiov909/aznyan/actions/workflows/R-CMD-check.yaml/badge.svg)](https://github.com/paithiov909/aznyan/actions/workflows/R-CMD-check.yaml)
<!-- badges: end -->

aznyan is a collection of image filters for R that wraps [OpenCV](https://opencv.org/),
ported from [5PB-3-4/AviUtl_OpenCV_Scripts](https://github.com/5PB-3-4/AviUtl_OpenCV_Scripts).

Still in development. It will probably work, but documentation is scant. Also, note that this package requires some SIMD extensions to work on your system.


## Usage

aznyan provides functions that take a `nativeRaster` of image data as their first argument
and return a `nativeRaster` after applying the effect.

You can simply read a PNG image into a `nativeRaster` using `fastpng::read_png()`.

```{r}
pkgload::load_all(export_all = FALSE)

png <-
  fastpng::read_png(
    system.file("images/sample-256x256-4ch.png", package = "aznyan"),
    type = "nativeraster",
    rgba = TRUE
  )
```

The original image `png` above looks like this:

![original image](inst/images/sample-256x256-4ch.png)


### Blur

```{r}
#| label: median-blur
median_blur(png, ksize = 8) |>
  grid::grid.raster(interpolate = FALSE)
```

### Diffusion Filter (拡散フィルタ)

```{r}
#| label: diffusion
diffusion_filter(png, factor = 8) |>
  grid::grid.raster(interpolate = FALSE)
```

### Morphological Transformation （モルフォロジー変換）

```{r}
#| label: morph-erosion
morphology(png, ksize = c(4, 4, 4)) |>
  grid::grid.raster(interpolate = FALSE)
```
