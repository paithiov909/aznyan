% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blur.R
\name{bilateral_filter}
\alias{bilateral_filter}
\title{Bilateral filter}
\usage{
bilateral_filter(
  nr,
  d = 5,
  sigmacolor = 1,
  sigmaspace = 1,
  border = c(3, 4, 0, 1, 2),
  alphasync = FALSE
)
}
\arguments{
\item{nr}{A \code{nativeRaster} object.}

\item{d}{An integer scalar.
Diameter of each pixel neighborhood that is used during filtering.
If it is non-positive, it is computed from \code{sigmaspace}.}

\item{sigmacolor}{A double scalar.
Filter sigma in the color space.
A larger value of the parameter means that farther colors
within the pixel neighborhood will be mixed together,
resulting in larger areas of semi-equal color.}

\item{sigmaspace}{A double scalar.
Filter sigma in the coordinate space.
A larger value of the parameter means
that farther pixels will influence each other
as long as their colors are close enough.}

\item{border}{An integer scalar.
The type of pixel extrapolation method.}

\item{alphasync}{A logical scalar.
If \code{TRUE}, filtering is applied separately to the alpha channel.}
}
\value{
A \code{nativeRaster} object.
}
\description{
Applies bilateral filtering to an image.
It can be used to reduce noise while keeping edges sharp.
However, it is very slow compared to most filters.
}
\details{
\code{border} refers to:
\enumerate{
\item cv::BORDER_CONSTANT
\item cv::BORDER_REPLICATE
\item cv::BORDER_REFLECT
\item cv::BORDER_REFLECT_101
\item cv::BORDER_ISOLATED
}
}
